# Generated by Django 5.0.3 on 2024-04-02 01:58

import django.db.models.deletion
import django_resized.forms
import fontawesome_6.fields
import parler.fields
import parler.models
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'branch',
                'verbose_name_plural': 'branches',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_service_icon1', fontawesome_6.fields.IconField(blank=True, help_text='short_service_icon1_help_text', max_length=60, verbose_name='short_service_icon1')),
                ('short_service_icon2', fontawesome_6.fields.IconField(blank=True, help_text='short_service_icon2_help_text', max_length=60, verbose_name='short_service_icon2')),
                ('short_service_icon3', fontawesome_6.fields.IconField(blank=True, help_text='short_service_icon3_help_text', max_length=60, verbose_name='short_service_icon3')),
                ('about_us_main_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[470, 528], upload_to='images/home/', verbose_name='about_us_main_image')),
                ('about_us_sec_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[301, 373], upload_to='images/home/', verbose_name='about_us_sec_image')),
                ('team_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[958, 695], upload_to='images/home/', verbose_name='team_image')),
                ('data_center_main_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[370, 540], upload_to='images/home/', verbose_name='data_center_main_image')),
                ('data_center_sec_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[421, 288], upload_to='images/home/', verbose_name='data_center_sec_image')),
                ('digital_workspace_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[502, 700], upload_to='images/home/', verbose_name='digital_workspace_image')),
                ('main_phone', phonenumber_field.modelfields.PhoneNumberField(help_text='main_phone_help_text', max_length=128, region=None, verbose_name='main_phone')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('map', models.TextField(help_text='map_help_text', verbose_name='map')),
                ('whatsapp_phone', phonenumber_field.modelfields.PhoneNumberField(help_text='whatsapp_phone_help_text', max_length=128, region=None, verbose_name='whatsapp_phone')),
                ('facebook', models.URLField(verbose_name='facebook_url')),
                ('twitter', models.URLField(verbose_name='twitter_url')),
                ('linkedin', models.URLField(verbose_name='linkedin_url')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'home_page',
                'verbose_name_plural': 'home_page',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='phone_help_text', max_length=128, region=None, verbose_name='phone')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.branch')),
            ],
            options={
                'verbose_name': 'phone',
                'verbose_name_plural': 'phones',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[309, 172], upload_to='images/home/partner/', verbose_name='partner_image')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section')),
            ],
            options={
                'verbose_name': 'partner',
                'verbose_name_plural': 'partners',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[144, 120], upload_to='images/home/client/', verbose_name='client_image')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='branch',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', fontawesome_6.fields.IconField(blank=True, help_text='service_icon', max_length=60, verbose_name='service_icon')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[550, 450], upload_to='images/home/service/', verbose_name='service_image')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bg_image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[1920, 900], upload_to='images/home/slider/', verbose_name='bg_image')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section')),
            ],
            options={
                'verbose_name': 'slider',
                'verbose_name_plural': 'sliders',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=90, scale=None, size=[110, 110], upload_to='images/home/testimonial/', verbose_name='testimonial_image')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.section')),
            ],
            options={
                'verbose_name': 'testimonial',
                'verbose_name_plural': 'testimonials',
                'ordering': ['id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BranchTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('address', models.TextField(help_text='branch_address_help_text', verbose_name='address')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.branch')),
            ],
            options={
                'verbose_name': 'branch Translation',
                'db_table': 'home_branch_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ClientTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='client_name_help_text', max_length=30, verbose_name='client_name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.client')),
            ],
            options={
                'verbose_name': 'client Translation',
                'db_table': 'home_client_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PartnerTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='partner_name_help_text', max_length=30, verbose_name='partner_name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.partner')),
            ],
            options={
                'verbose_name': 'partner Translation',
                'db_table': 'home_partner_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PhoneTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('phone_type', models.CharField(choices=[('0', 'Mobile'), ('1', 'Landline')], default=0, help_text='phone_type_help_text', max_length=20, verbose_name='phone_type')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.phone')),
            ],
            options={
                'verbose_name': 'phone Translation',
                'db_table': 'home_phone_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('page_title', models.CharField(help_text='page_title_help_text', max_length=60, verbose_name='page_title')),
                ('page_description', models.TextField(help_text='page_description_help_text', verbose_name='page_description')),
                ('short_service_title1', models.CharField(help_text='short_service_title1_help_text', max_length=60, verbose_name='short_service_title1')),
                ('short_service_description1', models.CharField(help_text='short_service_description1_help_text', max_length=255, verbose_name='short_service_description1')),
                ('short_service_title2', models.CharField(help_text='short_service_title2_help_text', max_length=60, verbose_name='short_service_title2')),
                ('short_service_description2', models.CharField(help_text='short_service_description2_help_text', max_length=255, verbose_name='short_service_description2')),
                ('short_service_title3', models.CharField(help_text='short_service_title3_help_text', max_length=60, verbose_name='short_service_title3')),
                ('short_service_description3', models.CharField(help_text='short_service_description3_help_text', max_length=255, verbose_name='short_service_description3')),
                ('about_us_title', models.CharField(help_text='about_us_title_help_text', max_length=60, verbose_name='about_us_title')),
                ('about_us_description', models.TextField(help_text='about_us_description_help_text', verbose_name='about_us_description')),
                ('about_us_footer_text', models.TextField(help_text='about_us_footer_text_help_text', verbose_name='about_us_description')),
                ('our_vision_text', models.TextField(help_text='our_vision_help_text', verbose_name='our_vision_text')),
                ('our_mission_text', models.TextField(help_text='our_mission_text_help_text', verbose_name='our_mission_text')),
                ('team_title1', models.CharField(help_text='team_title1_help_text', max_length=60, verbose_name='team_title1')),
                ('team_description1', models.TextField(help_text='team_description1_help_text', verbose_name='team_description1')),
                ('team_title2', models.CharField(help_text='team_title2_help_text', max_length=60, verbose_name='team_title2')),
                ('team_description2', models.TextField(help_text='team_description2_help_text', verbose_name='team_description2')),
                ('data_center_text', models.TextField(help_text='data_center_text_help_text', verbose_name='data_center_text')),
                ('digital_workspace_title1', models.CharField(help_text='digital_workspace_title1_help_text', max_length=60, verbose_name='digital_workspace_title1')),
                ('digital_workspace_description1', models.TextField(help_text='digital_workspace_description1_help_text', verbose_name='digital_workspace_description1')),
                ('digital_workspace_title2', models.CharField(help_text='digital_workspace_title2_help_text', max_length=60, verbose_name='digital_workspace_title2')),
                ('digital_workspace_description2', models.TextField(help_text='digital_workspace_description2_help_text', verbose_name='digital_workspace_description2')),
                ('digital_workspace_title3', models.CharField(help_text='digital_workspace_title3_help_text', max_length=60, verbose_name='digital_workspace_title3')),
                ('digital_workspace_description3', models.TextField(help_text='digital_workspace_description3_help_text', verbose_name='digital_workspace_description3')),
                ('digital_workspace_title4', models.CharField(help_text='digital_workspace_title4_help_text', max_length=60, verbose_name='digital_workspace_title4')),
                ('digital_workspace_description4', models.TextField(help_text='digital_workspace_description4_help_text', verbose_name='digital_workspace_description4')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.section')),
            ],
            options={
                'verbose_name': 'home_page Translation',
                'db_table': 'home_section_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ServiceTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='service_name_help_text', max_length=60, verbose_name='service_name')),
                ('description', models.TextField(help_text='service_description_help_text', verbose_name='service_description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.service')),
            ],
            options={
                'verbose_name': 'service Translation',
                'db_table': 'home_service_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SliderTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(help_text='title_help_text', max_length=200, verbose_name='title')),
                ('sub_title', models.CharField(help_text='sub_title_help_text', max_length=30, verbose_name='sub_title')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.slider')),
            ],
            options={
                'verbose_name': 'slider Translation',
                'db_table': 'home_slider_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TestimonialTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='testimonial_name_help_text', max_length=30, verbose_name='testimonial_name')),
                ('description', models.CharField(help_text='testimonial_description_help_text', max_length=60, verbose_name='testimonial_description')),
                ('feedback', models.TextField(help_text='testimonial_feedback_help_text', max_length=1000, verbose_name='testimonial_feedback')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='home.testimonial')),
            ],
            options={
                'verbose_name': 'testimonial Translation',
                'db_table': 'home_testimonial_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
